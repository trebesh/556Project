Parallelisation

ConnorFergusson_1299038_HannahTrebes_1306378

AIM OF PROJECT:
Compare the serial version of the algorithm to at least one method of parallelisation.
You may use an existing parallel version of an algorithm or make up your own.
Will need to set up an experimental framework enabling comparisson of algorithm performance by performing multiple runs.


Programming Language of choice:
 - Java

Algorithm to implement:
 - Ant Colony Optimisation

Problem to be tackled:
(A good problem is one that can't be solved with an efficient algorithm or brute force already. 
Must be NP-hard.
At least three different problem instances of increasing difficulty.)
 - Set Cover Problem

Statistics needed:
With fair parameter optimisation applied to both the serial and parallel versions.
 - Best case performance.
 - Average case performance.
 - Speedup statistics.
 
 Report:
  - 4-6 Pages, IEEE double column
  - Problem
  - Investigation


IMPLEMENTATION
SCP
 - Universe - Set of elements 1 to n
 - Sets - sets of varying size containing elements between 1 and n
 - Solution - Collection of sets whose union equals the universe
ACO
 - Ant - A class that makes decissions about the next step toward a solution dependant on any existing trail and the attractiveness of the solution, and lays a 'pheremone' trail
  - Trail - The path taken by an Ant. Strength fades over time
 - Colony - Set of Ants 
 - Weight edges based on duplicate set elements in next step and new elements in next step.
 
METHODS
Get problem instance
Create ants
Weight next step
Unleash ants

